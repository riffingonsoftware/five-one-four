"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebValuesEncoder = void 0;
const client_common_1 = require("@clickhouse/client-common");
const stream_1 = require("./stream");
class WebValuesEncoder {
    encodeValues(values, format) {
        throwIfStream(values);
        // JSON* arrays
        if (Array.isArray(values)) {
            return values.map((value) => (0, client_common_1.encodeJSON)(value, format)).join('');
        }
        // JSON & JSONObjectEachRow format input
        if (typeof values === 'object') {
            return (0, client_common_1.encodeJSON)(values, format);
        }
        throw new Error(`Cannot encode values of type ${typeof values} with ${format} format`);
    }
    validateInsertValues(values) {
        throwIfStream(values);
        if (!Array.isArray(values) && typeof values !== 'object') {
            throw new Error('Insert expected "values" to be an array or a JSON object, ' +
                `got: ${typeof values}`);
        }
    }
}
exports.WebValuesEncoder = WebValuesEncoder;
function throwIfStream(values) {
    if ((0, stream_1.isStream)(values)) {
        throw new Error('Streaming is not supported for inserts in the web version of the client');
    }
}
//# sourceMappingURL=encoder.js.map